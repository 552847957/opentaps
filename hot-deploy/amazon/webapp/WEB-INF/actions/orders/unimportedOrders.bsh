/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 * 
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.*;
import org.ofbiz.party.party.PartyHelper;
import org.opentaps.amazon.AmazonConstants;

// List Amazon orders which haven't yet been imported or for which import has failed

conditions = UtilMisc.toList(new EntityExpr("statusId", EntityOperator.IN, UtilMisc.toList(AmazonConstants.statusOrderCreated, AmazonConstants.statusOrderImportedError)));        

builder() {
    entityName = "AmazonOrder";
    orderBy = UtilMisc.toList("orderDate");
    where = conditions;

    build(page) {
        newPage = new ArrayList();
        for (row : page) {
            amazonOrder = row.getAllFields();
            amazonOrder.put("statusDescription", row.getRelatedOne("StatusItem").getString("description"));
            amazonOrder.put("orderItems", row.getRelated("AmazonOrderItem"));
            newPage.add(amazonOrder);
        }
        return newPage;
    }
    return this;
}
context.put("amazonOrders", builder());