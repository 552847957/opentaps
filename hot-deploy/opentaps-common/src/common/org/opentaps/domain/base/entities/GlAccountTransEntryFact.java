package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity GlAccountTransEntryFact.
 */
@javax.persistence.Entity
@Table(name="GL_ACCOUNT_TRANS_ENTRY_FACT")
public class GlAccountTransEntryFact extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("glAccountTransEntryFactId", "GL_ACCOUNT_TRANS_ENTRY_FACT_ID");
        fields.put("transactionDate", "TRANSACTION_DATE");
        fields.put("organizationPartyId", "ORGANIZATION_PARTY_ID");
        fields.put("glAccountId", "GL_ACCOUNT_ID");
        fields.put("acctgTransId", "ACCTG_TRANS_ID");
        fields.put("acctgTransEntrySeqId", "ACCTG_TRANS_ENTRY_SEQ_ID");
        fields.put("budgetDebitAmount", "BUDGET_DEBIT_AMOUNT");
        fields.put("budgetCreditAmount", "BUDGET_CREDIT_AMOUNT");
        fields.put("actualDebitAmount", "ACTUAL_DEBIT_AMOUNT");
        fields.put("actualCreditAmount", "ACTUAL_CREDIT_AMOUNT");
        fields.put("encumberedDebitAmount", "ENCUMBERED_DEBIT_AMOUNT");
        fields.put("encumberedCreditAmount", "ENCUMBERED_CREDIT_AMOUNT");
        fields.put("budgetNetAmount", "BUDGET_NET_AMOUNT");
        fields.put("actualNetAmount", "ACTUAL_NET_AMOUNT");
        fields.put("encumberedNetAmount", "ENCUMBERED_NET_AMOUNT");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("GlAccountTransEntryFact", fields);
}
  public static enum Fields implements EntityFieldInterface<GlAccountTransEntryFact> {
    glAccountTransEntryFactId("glAccountTransEntryFactId"),
    transactionDate("transactionDate"),
    organizationPartyId("organizationPartyId"),
    glAccountId("glAccountId"),
    acctgTransId("acctgTransId"),
    acctgTransEntrySeqId("acctgTransEntrySeqId"),
    budgetDebitAmount("budgetDebitAmount"),
    budgetCreditAmount("budgetCreditAmount"),
    actualDebitAmount("actualDebitAmount"),
    actualCreditAmount("actualCreditAmount"),
    encumberedDebitAmount("encumberedDebitAmount"),
    encumberedCreditAmount("encumberedCreditAmount"),
    budgetNetAmount("budgetNetAmount"),
    actualNetAmount("actualNetAmount"),
    encumberedNetAmount("encumberedNetAmount"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="GlAccountTransEntryFact_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="GlAccountTransEntryFact_GEN")
   @Id
   @Column(name="GL_ACCOUNT_TRANS_ENTRY_FACT_ID")
   private String glAccountTransEntryFactId;
   @Column(name="TRANSACTION_DATE")
   private Timestamp transactionDate;
   @Column(name="ORGANIZATION_PARTY_ID")
   private String organizationPartyId;
   @Column(name="GL_ACCOUNT_ID")
   private String glAccountId;
   @Column(name="ACCTG_TRANS_ID")
   private String acctgTransId;
   @Column(name="ACCTG_TRANS_ENTRY_SEQ_ID")
   private String acctgTransEntrySeqId;
   @Column(name="BUDGET_DEBIT_AMOUNT")
   private BigDecimal budgetDebitAmount;
   @Column(name="BUDGET_CREDIT_AMOUNT")
   private BigDecimal budgetCreditAmount;
   @Column(name="ACTUAL_DEBIT_AMOUNT")
   private BigDecimal actualDebitAmount;
   @Column(name="ACTUAL_CREDIT_AMOUNT")
   private BigDecimal actualCreditAmount;
   @Column(name="ENCUMBERED_DEBIT_AMOUNT")
   private BigDecimal encumberedDebitAmount;
   @Column(name="ENCUMBERED_CREDIT_AMOUNT")
   private BigDecimal encumberedCreditAmount;
   @Column(name="BUDGET_NET_AMOUNT")
   private BigDecimal budgetNetAmount;
   @Column(name="ACTUAL_NET_AMOUNT")
   private BigDecimal actualNetAmount;
   @Column(name="ENCUMBERED_NET_AMOUNT")
   private BigDecimal encumberedNetAmount;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="GL_ACCOUNT_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private GlAccount glAccount = null;
   private transient AcctgTransEntry acctgTransEntry = null;

  /**
   * Default constructor.
   */
  public GlAccountTransEntryFact() {
      super();
      this.baseEntityName = "GlAccountTransEntryFact";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("glAccountTransEntryFactId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("glAccountTransEntryFactId");this.allFieldsNames.add("transactionDate");this.allFieldsNames.add("organizationPartyId");this.allFieldsNames.add("glAccountId");this.allFieldsNames.add("acctgTransId");this.allFieldsNames.add("acctgTransEntrySeqId");this.allFieldsNames.add("budgetDebitAmount");this.allFieldsNames.add("budgetCreditAmount");this.allFieldsNames.add("actualDebitAmount");this.allFieldsNames.add("actualCreditAmount");this.allFieldsNames.add("encumberedDebitAmount");this.allFieldsNames.add("encumberedCreditAmount");this.allFieldsNames.add("budgetNetAmount");this.allFieldsNames.add("actualNetAmount");this.allFieldsNames.add("encumberedNetAmount");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public GlAccountTransEntryFact(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param glAccountTransEntryFactId the glAccountTransEntryFactId to set
     */
    public void setGlAccountTransEntryFactId(String glAccountTransEntryFactId) {
        this.glAccountTransEntryFactId = glAccountTransEntryFactId;
    }
    /**
     * Auto generated value setter.
     * @param transactionDate the transactionDate to set
     */
    public void setTransactionDate(Timestamp transactionDate) {
        this.transactionDate = transactionDate;
    }
    /**
     * Auto generated value setter.
     * @param organizationPartyId the organizationPartyId to set
     */
    public void setOrganizationPartyId(String organizationPartyId) {
        this.organizationPartyId = organizationPartyId;
    }
    /**
     * Auto generated value setter.
     * @param glAccountId the glAccountId to set
     */
    public void setGlAccountId(String glAccountId) {
        this.glAccountId = glAccountId;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransId the acctgTransId to set
     */
    public void setAcctgTransId(String acctgTransId) {
        this.acctgTransId = acctgTransId;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransEntrySeqId the acctgTransEntrySeqId to set
     */
    public void setAcctgTransEntrySeqId(String acctgTransEntrySeqId) {
        this.acctgTransEntrySeqId = acctgTransEntrySeqId;
    }
    /**
     * Auto generated value setter.
     * @param budgetDebitAmount the budgetDebitAmount to set
     */
    public void setBudgetDebitAmount(BigDecimal budgetDebitAmount) {
        this.budgetDebitAmount = budgetDebitAmount;
    }
    /**
     * Auto generated value setter.
     * @param budgetCreditAmount the budgetCreditAmount to set
     */
    public void setBudgetCreditAmount(BigDecimal budgetCreditAmount) {
        this.budgetCreditAmount = budgetCreditAmount;
    }
    /**
     * Auto generated value setter.
     * @param actualDebitAmount the actualDebitAmount to set
     */
    public void setActualDebitAmount(BigDecimal actualDebitAmount) {
        this.actualDebitAmount = actualDebitAmount;
    }
    /**
     * Auto generated value setter.
     * @param actualCreditAmount the actualCreditAmount to set
     */
    public void setActualCreditAmount(BigDecimal actualCreditAmount) {
        this.actualCreditAmount = actualCreditAmount;
    }
    /**
     * Auto generated value setter.
     * @param encumberedDebitAmount the encumberedDebitAmount to set
     */
    public void setEncumberedDebitAmount(BigDecimal encumberedDebitAmount) {
        this.encumberedDebitAmount = encumberedDebitAmount;
    }
    /**
     * Auto generated value setter.
     * @param encumberedCreditAmount the encumberedCreditAmount to set
     */
    public void setEncumberedCreditAmount(BigDecimal encumberedCreditAmount) {
        this.encumberedCreditAmount = encumberedCreditAmount;
    }
    /**
     * Auto generated value setter.
     * @param budgetNetAmount the budgetNetAmount to set
     */
    public void setBudgetNetAmount(BigDecimal budgetNetAmount) {
        this.budgetNetAmount = budgetNetAmount;
    }
    /**
     * Auto generated value setter.
     * @param actualNetAmount the actualNetAmount to set
     */
    public void setActualNetAmount(BigDecimal actualNetAmount) {
        this.actualNetAmount = actualNetAmount;
    }
    /**
     * Auto generated value setter.
     * @param encumberedNetAmount the encumberedNetAmount to set
     */
    public void setEncumberedNetAmount(BigDecimal encumberedNetAmount) {
        this.encumberedNetAmount = encumberedNetAmount;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGlAccountTransEntryFactId() {
        return this.glAccountTransEntryFactId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getTransactionDate() {
        return this.transactionDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getOrganizationPartyId() {
        return this.organizationPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getGlAccountId() {
        return this.glAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTransId() {
        return this.acctgTransId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcctgTransEntrySeqId() {
        return this.acctgTransEntrySeqId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getBudgetDebitAmount() {
        return this.budgetDebitAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getBudgetCreditAmount() {
        return this.budgetCreditAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualDebitAmount() {
        return this.actualDebitAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualCreditAmount() {
        return this.actualCreditAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEncumberedDebitAmount() {
        return this.encumberedDebitAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEncumberedCreditAmount() {
        return this.encumberedCreditAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getBudgetNetAmount() {
        return this.budgetNetAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getActualNetAmount() {
        return this.actualNetAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getEncumberedNetAmount() {
        return this.encumberedNetAmount;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>GlAccount</code> by the relation named <code>GlAccount</code>.
     * @return the <code>GlAccount</code>
     * @throws RepositoryException if an error occurs
     */
    public GlAccount getGlAccount() throws RepositoryException {
        if (this.glAccount == null) {
            this.glAccount = getRelatedOne(GlAccount.class, "GlAccount");
        }
        return this.glAccount;
    }
    /**
     * Auto generated method that gets the related <code>AcctgTransEntry</code> by the relation named <code>AcctgTransEntry</code>.
     * @return the <code>AcctgTransEntry</code>
     * @throws RepositoryException if an error occurs
     */
    public AcctgTransEntry getAcctgTransEntry() throws RepositoryException {
        if (this.acctgTransEntry == null) {
            this.acctgTransEntry = getRelatedOne(AcctgTransEntry.class, "AcctgTransEntry");
        }
        return this.acctgTransEntry;
    }

    /**
     * Auto generated value setter.
     * @param glAccount the glAccount to set
    */
    public void setGlAccount(GlAccount glAccount) {
        this.glAccount = glAccount;
    }
    /**
     * Auto generated value setter.
     * @param acctgTransEntry the acctgTransEntry to set
    */
    public void setAcctgTransEntry(AcctgTransEntry acctgTransEntry) {
        this.acctgTransEntry = acctgTransEntry;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setGlAccountTransEntryFactId((String) mapValue.get("glAccountTransEntryFactId"));
        setTransactionDate((Timestamp) mapValue.get("transactionDate"));
        setOrganizationPartyId((String) mapValue.get("organizationPartyId"));
        setGlAccountId((String) mapValue.get("glAccountId"));
        setAcctgTransId((String) mapValue.get("acctgTransId"));
        setAcctgTransEntrySeqId((String) mapValue.get("acctgTransEntrySeqId"));
        setBudgetDebitAmount(convertToBigDecimal(mapValue.get("budgetDebitAmount")));
        setBudgetCreditAmount(convertToBigDecimal(mapValue.get("budgetCreditAmount")));
        setActualDebitAmount(convertToBigDecimal(mapValue.get("actualDebitAmount")));
        setActualCreditAmount(convertToBigDecimal(mapValue.get("actualCreditAmount")));
        setEncumberedDebitAmount(convertToBigDecimal(mapValue.get("encumberedDebitAmount")));
        setEncumberedCreditAmount(convertToBigDecimal(mapValue.get("encumberedCreditAmount")));
        setBudgetNetAmount(convertToBigDecimal(mapValue.get("budgetNetAmount")));
        setActualNetAmount(convertToBigDecimal(mapValue.get("actualNetAmount")));
        setEncumberedNetAmount(convertToBigDecimal(mapValue.get("encumberedNetAmount")));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("glAccountTransEntryFactId", getGlAccountTransEntryFactId());
        mapValue.put("transactionDate", getTransactionDate());
        mapValue.put("organizationPartyId", getOrganizationPartyId());
        mapValue.put("glAccountId", getGlAccountId());
        mapValue.put("acctgTransId", getAcctgTransId());
        mapValue.put("acctgTransEntrySeqId", getAcctgTransEntrySeqId());
        mapValue.put("budgetDebitAmount", getBudgetDebitAmount());
        mapValue.put("budgetCreditAmount", getBudgetCreditAmount());
        mapValue.put("actualDebitAmount", getActualDebitAmount());
        mapValue.put("actualCreditAmount", getActualCreditAmount());
        mapValue.put("encumberedDebitAmount", getEncumberedDebitAmount());
        mapValue.put("encumberedCreditAmount", getEncumberedCreditAmount());
        mapValue.put("budgetNetAmount", getBudgetNetAmount());
        mapValue.put("actualNetAmount", getActualNetAmount());
        mapValue.put("encumberedNetAmount", getEncumberedNetAmount());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
