package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity SimpleSalesTaxLookup.
 */
@javax.persistence.Entity
@Table(name="SIMPLE_SALES_TAX_LOOKUP")
public class SimpleSalesTaxLookup extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("productStoreId", "PRODUCT_STORE_ID");
        fields.put("countryGeoId", "COUNTRY_GEO_ID");
        fields.put("stateProvinceGeoId", "STATE_PROVINCE_GEO_ID");
        fields.put("taxCategory", "TAX_CATEGORY");
        fields.put("fromDate", "FROM_DATE");
        fields.put("thruDate", "THRU_DATE");
        fields.put("description", "DESCRIPTION");
        fields.put("minItemPrice", "MIN_ITEM_PRICE");
        fields.put("minPurchase", "MIN_PURCHASE");
        fields.put("taxShipping", "TAX_SHIPPING");
        fields.put("salesTaxPercentage", "SALES_TAX_PERCENTAGE");
        fields.put("taxAuthPartyId", "TAX_AUTH_PARTY_ID");
        fields.put("taxAuthGlAccountId", "TAX_AUTH_GL_ACCOUNT_ID");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("SimpleSalesTaxLookup", fields);
}
  public static enum Fields implements EntityFieldInterface<SimpleSalesTaxLookup> {
    productStoreId("productStoreId"),
    countryGeoId("countryGeoId"),
    stateProvinceGeoId("stateProvinceGeoId"),
    taxCategory("taxCategory"),
    fromDate("fromDate"),
    thruDate("thruDate"),
    description("description"),
    minItemPrice("minItemPrice"),
    minPurchase("minPurchase"),
    taxShipping("taxShipping"),
    salesTaxPercentage("salesTaxPercentage"),
    taxAuthPartyId("taxAuthPartyId"),
    taxAuthGlAccountId("taxAuthGlAccountId"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @EmbeddedId

   @FieldBridge(impl = org.opentaps.domain.base.entities.bridge.SimpleSalesTaxLookupPkBridge.class)
     private SimpleSalesTaxLookupPk id = new SimpleSalesTaxLookupPk();
   
    /**
     * Auto generated Id accessor.
     * @return <code>SimpleSalesTaxLookupPk</code>
     */
      public SimpleSalesTaxLookupPk getId() {
         return id;
      }
    /**
     * Auto generated Id setter.
     * @param id a <code>SimpleSalesTaxLookupPk</code> value to set
    */   
      public void setId(SimpleSalesTaxLookupPk id) {
         this.id = id;
      }
   @Column(name="THRU_DATE")
   private Timestamp thruDate;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="TAX_SHIPPING")
   private String taxShipping;
   @Column(name="SALES_TAX_PERCENTAGE")
   private BigDecimal salesTaxPercentage;
   @Column(name="TAX_AUTH_PARTY_ID")
   private String taxAuthPartyId;
   @Column(name="TAX_AUTH_GL_ACCOUNT_ID")
   private String taxAuthGlAccountId;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   private transient List<Product> products = null;

  /**
   * Default constructor.
   */
  public SimpleSalesTaxLookup() {
      super();
      this.baseEntityName = "SimpleSalesTaxLookup";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("productStoreId");this.primaryKeyNames.add("countryGeoId");this.primaryKeyNames.add("stateProvinceGeoId");this.primaryKeyNames.add("taxCategory");this.primaryKeyNames.add("minItemPrice");this.primaryKeyNames.add("minPurchase");this.primaryKeyNames.add("fromDate");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("productStoreId");this.allFieldsNames.add("countryGeoId");this.allFieldsNames.add("stateProvinceGeoId");this.allFieldsNames.add("taxCategory");this.allFieldsNames.add("fromDate");this.allFieldsNames.add("thruDate");this.allFieldsNames.add("description");this.allFieldsNames.add("minItemPrice");this.allFieldsNames.add("minPurchase");this.allFieldsNames.add("taxShipping");this.allFieldsNames.add("salesTaxPercentage");this.allFieldsNames.add("taxAuthPartyId");this.allFieldsNames.add("taxAuthGlAccountId");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public SimpleSalesTaxLookup(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param productStoreId the productStoreId to set
     */
    public void setProductStoreId(String productStoreId) {
        id.setProductStoreId(productStoreId);
    }
    /**
     * Auto generated value setter.
     * @param countryGeoId the countryGeoId to set
     */
    public void setCountryGeoId(String countryGeoId) {
        id.setCountryGeoId(countryGeoId);
    }
    /**
     * Auto generated value setter.
     * @param stateProvinceGeoId the stateProvinceGeoId to set
     */
    public void setStateProvinceGeoId(String stateProvinceGeoId) {
        id.setStateProvinceGeoId(stateProvinceGeoId);
    }
    /**
     * Auto generated value setter.
     * @param taxCategory the taxCategory to set
     */
    public void setTaxCategory(String taxCategory) {
        id.setTaxCategory(taxCategory);
    }
    /**
     * Auto generated value setter.
     * @param fromDate the fromDate to set
     */
    public void setFromDate(Timestamp fromDate) {
        id.setFromDate(fromDate);
    }
    /**
     * Auto generated value setter.
     * @param thruDate the thruDate to set
     */
    public void setThruDate(Timestamp thruDate) {
        this.thruDate = thruDate;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param minItemPrice the minItemPrice to set
     */
    public void setMinItemPrice(BigDecimal minItemPrice) {
        id.setMinItemPrice(minItemPrice);
    }
    /**
     * Auto generated value setter.
     * @param minPurchase the minPurchase to set
     */
    public void setMinPurchase(BigDecimal minPurchase) {
        id.setMinPurchase(minPurchase);
    }
    /**
     * Auto generated value setter.
     * @param taxShipping the taxShipping to set
     */
    public void setTaxShipping(String taxShipping) {
        this.taxShipping = taxShipping;
    }
    /**
     * Auto generated value setter.
     * @param salesTaxPercentage the salesTaxPercentage to set
     */
    public void setSalesTaxPercentage(BigDecimal salesTaxPercentage) {
        this.salesTaxPercentage = salesTaxPercentage;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthPartyId the taxAuthPartyId to set
     */
    public void setTaxAuthPartyId(String taxAuthPartyId) {
        this.taxAuthPartyId = taxAuthPartyId;
    }
    /**
     * Auto generated value setter.
     * @param taxAuthGlAccountId the taxAuthGlAccountId to set
     */
    public void setTaxAuthGlAccountId(String taxAuthGlAccountId) {
        this.taxAuthGlAccountId = taxAuthGlAccountId;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProductStoreId() {
        return this.id.getProductStoreId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCountryGeoId() {
        return this.id.getCountryGeoId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStateProvinceGeoId() {
        return this.id.getStateProvinceGeoId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxCategory() {
        return this.id.getTaxCategory();
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getFromDate() {
        return this.id.getFromDate();
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getThruDate() {
        return this.thruDate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinItemPrice() {
        return this.id.getMinItemPrice();
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getMinPurchase() {
        return this.id.getMinPurchase();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxShipping() {
        return this.taxShipping;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getSalesTaxPercentage() {
        return this.salesTaxPercentage;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthPartyId() {
        return this.taxAuthPartyId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getTaxAuthGlAccountId() {
        return this.taxAuthGlAccountId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Product</code> by the relation named <code>Product</code>.
     * @return the list of <code>Product</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends Product> getProducts() throws RepositoryException {
        if (this.products == null) {
            this.products = getRelated(Product.class, "Product");
        }
        return this.products;
    }

    /**
     * Auto generated value setter.
     * @param products the products to set
    */
    public void setProducts(List<Product> products) {
        this.products = products;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setProductStoreId((String) mapValue.get("productStoreId"));
        setCountryGeoId((String) mapValue.get("countryGeoId"));
        setStateProvinceGeoId((String) mapValue.get("stateProvinceGeoId"));
        setTaxCategory((String) mapValue.get("taxCategory"));
        setFromDate((Timestamp) mapValue.get("fromDate"));
        setThruDate((Timestamp) mapValue.get("thruDate"));
        setDescription((String) mapValue.get("description"));
        setMinItemPrice(convertToBigDecimal(mapValue.get("minItemPrice")));
        setMinPurchase(convertToBigDecimal(mapValue.get("minPurchase")));
        setTaxShipping((String) mapValue.get("taxShipping"));
        setSalesTaxPercentage(convertToBigDecimal(mapValue.get("salesTaxPercentage")));
        setTaxAuthPartyId((String) mapValue.get("taxAuthPartyId"));
        setTaxAuthGlAccountId((String) mapValue.get("taxAuthGlAccountId"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("productStoreId", getProductStoreId());
        mapValue.put("countryGeoId", getCountryGeoId());
        mapValue.put("stateProvinceGeoId", getStateProvinceGeoId());
        mapValue.put("taxCategory", getTaxCategory());
        mapValue.put("fromDate", getFromDate());
        mapValue.put("thruDate", getThruDate());
        mapValue.put("description", getDescription());
        mapValue.put("minItemPrice", getMinItemPrice());
        mapValue.put("minPurchase", getMinPurchase());
        mapValue.put("taxShipping", getTaxShipping());
        mapValue.put("salesTaxPercentage", getSalesTaxPercentage());
        mapValue.put("taxAuthPartyId", getTaxAuthPartyId());
        mapValue.put("taxAuthGlAccountId", getTaxAuthGlAccountId());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
