package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.math.BigDecimal;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkflowActivity.
 */
@javax.persistence.Entity
@Table(name="WORKFLOW_ACTIVITY")
public class WorkflowActivity extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("packageId", "PACKAGE_ID");
        fields.put("packageVersion", "PACKAGE_VERSION");
        fields.put("processId", "PROCESS_ID");
        fields.put("processVersion", "PROCESS_VERSION");
        fields.put("activityId", "ACTIVITY_ID");
        fields.put("objectName", "OBJECT_NAME");
        fields.put("objectPriority", "OBJECT_PRIORITY");
        fields.put("description", "DESCRIPTION");
        fields.put("timeLimit", "TIME_LIMIT");
        fields.put("startModeEnumId", "START_MODE_ENUM_ID");
        fields.put("finishModeEnumId", "FINISH_MODE_ENUM_ID");
        fields.put("performerParticipantId", "PERFORMER_PARTICIPANT_ID");
        fields.put("documentationUrl", "DOCUMENTATION_URL");
        fields.put("iconUrl", "ICON_URL");
        fields.put("cost", "COST");
        fields.put("instantiationLimitEnumId", "INSTANTIATION_LIMIT_ENUM_ID");
        fields.put("duration", "DURATION");
        fields.put("workingTime", "WORKING_TIME");
        fields.put("waitingTime", "WAITING_TIME");
        fields.put("activityTypeEnumId", "ACTIVITY_TYPE_ENUM_ID");
        fields.put("canStart", "CAN_START");
        fields.put("isInlineBlock", "IS_INLINE_BLOCK");
        fields.put("blockName", "BLOCK_NAME");
        fields.put("blockDocumentationUrl", "BLOCK_DOCUMENTATION_URL");
        fields.put("blockIconUrl", "BLOCK_ICON_URL");
        fields.put("blockDescription", "BLOCK_DESCRIPTION");
        fields.put("blockBeginActivityId", "BLOCK_BEGIN_ACTIVITY_ID");
        fields.put("blockEndActivityId", "BLOCK_END_ACTIVITY_ID");
        fields.put("joinTypeEnumId", "JOIN_TYPE_ENUM_ID");
        fields.put("splitTypeEnumId", "SPLIT_TYPE_ENUM_ID");
        fields.put("acceptAllAssignments", "ACCEPT_ALL_ASSIGNMENTS");
        fields.put("completeAllAssignments", "COMPLETE_ALL_ASSIGNMENTS");
        fields.put("limitService", "LIMIT_SERVICE");
        fields.put("limitAfterStart", "LIMIT_AFTER_START");
        fields.put("delegateAfterStart", "DELEGATE_AFTER_START");
        fields.put("restartOnDelegate", "RESTART_ON_DELEGATE");
        fields.put("inheritPriority", "INHERIT_PRIORITY");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WorkflowActivity", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkflowActivity> {
    packageId("packageId"),
    packageVersion("packageVersion"),
    processId("processId"),
    processVersion("processVersion"),
    activityId("activityId"),
    objectName("objectName"),
    objectPriority("objectPriority"),
    description("description"),
    timeLimit("timeLimit"),
    startModeEnumId("startModeEnumId"),
    finishModeEnumId("finishModeEnumId"),
    performerParticipantId("performerParticipantId"),
    documentationUrl("documentationUrl"),
    iconUrl("iconUrl"),
    cost("cost"),
    instantiationLimitEnumId("instantiationLimitEnumId"),
    duration("duration"),
    workingTime("workingTime"),
    waitingTime("waitingTime"),
    activityTypeEnumId("activityTypeEnumId"),
    canStart("canStart"),
    isInlineBlock("isInlineBlock"),
    blockName("blockName"),
    blockDocumentationUrl("blockDocumentationUrl"),
    blockIconUrl("blockIconUrl"),
    blockDescription("blockDescription"),
    blockBeginActivityId("blockBeginActivityId"),
    blockEndActivityId("blockEndActivityId"),
    joinTypeEnumId("joinTypeEnumId"),
    splitTypeEnumId("splitTypeEnumId"),
    acceptAllAssignments("acceptAllAssignments"),
    completeAllAssignments("completeAllAssignments"),
    limitService("limitService"),
    limitAfterStart("limitAfterStart"),
    delegateAfterStart("delegateAfterStart"),
    restartOnDelegate("restartOnDelegate"),
    inheritPriority("inheritPriority"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @EmbeddedId

   @FieldBridge(impl = org.opentaps.domain.base.entities.bridge.WorkflowActivityPkBridge.class)
     private WorkflowActivityPk id = new WorkflowActivityPk();
   
    /**
     * Auto generated Id accessor.
     * @return <code>WorkflowActivityPk</code>
     */
      public WorkflowActivityPk getId() {
         return id;
      }
    /**
     * Auto generated Id setter.
     * @param id a <code>WorkflowActivityPk</code> value to set
    */   
      public void setId(WorkflowActivityPk id) {
         this.id = id;
      }
   @Column(name="OBJECT_NAME")
   private String objectName;
   @Column(name="OBJECT_PRIORITY")
   private Long objectPriority;
   @Column(name="DESCRIPTION")
   private String description;
   @Column(name="TIME_LIMIT")
   private BigDecimal timeLimit;
   @Column(name="START_MODE_ENUM_ID")
   private String startModeEnumId;
   @Column(name="FINISH_MODE_ENUM_ID")
   private String finishModeEnumId;
   @Column(name="PERFORMER_PARTICIPANT_ID")
   private String performerParticipantId;
   @Column(name="DOCUMENTATION_URL")
   private String documentationUrl;
   @Column(name="ICON_URL")
   private String iconUrl;
   @Column(name="COST")
   private BigDecimal cost;
   @Column(name="INSTANTIATION_LIMIT_ENUM_ID")
   private String instantiationLimitEnumId;
   @Column(name="DURATION")
   private BigDecimal duration;
   @Column(name="WORKING_TIME")
   private BigDecimal workingTime;
   @Column(name="WAITING_TIME")
   private BigDecimal waitingTime;
   @Column(name="ACTIVITY_TYPE_ENUM_ID")
   private String activityTypeEnumId;
   @Column(name="CAN_START")
   private String canStart;
   @Column(name="IS_INLINE_BLOCK")
   private String isInlineBlock;
   @Column(name="BLOCK_NAME")
   private String blockName;
   @Column(name="BLOCK_DOCUMENTATION_URL")
   private String blockDocumentationUrl;
   @Column(name="BLOCK_ICON_URL")
   private String blockIconUrl;
   @Column(name="BLOCK_DESCRIPTION")
   private String blockDescription;
   @Column(name="BLOCK_BEGIN_ACTIVITY_ID")
   private String blockBeginActivityId;
   @Column(name="BLOCK_END_ACTIVITY_ID")
   private String blockEndActivityId;
   @Column(name="JOIN_TYPE_ENUM_ID")
   private String joinTypeEnumId;
   @Column(name="SPLIT_TYPE_ENUM_ID")
   private String splitTypeEnumId;
   @Column(name="ACCEPT_ALL_ASSIGNMENTS")
   private String acceptAllAssignments;
   @Column(name="COMPLETE_ALL_ASSIGNMENTS")
   private String completeAllAssignments;
   @Column(name="LIMIT_SERVICE")
   private String limitService;
   @Column(name="LIMIT_AFTER_START")
   private String limitAfterStart;
   @Column(name="DELEGATE_AFTER_START")
   private String delegateAfterStart;
   @Column(name="RESTART_ON_DELEGATE")
   private String restartOnDelegate;
   @Column(name="INHERIT_PRIORITY")
   private String inheritPriority;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="START_MODE_ENUM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration startModeEnumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="FINISH_MODE_ENUM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration finishModeEnumeration = null;
   private transient WorkflowParticipant performerWorkflowParticipant = null;
   private transient WorkflowProcess workflowProcess = null;
   private transient WorkflowActivity blockBeginWorkflowActivity = null;
   private transient WorkflowActivity blockEndWorkflowActivity = null;
   private transient List<WorkflowActivity> blockBeginContainerWorkflowActivitys = null;
   private transient List<WorkflowActivity> blockEndContainerWorkflowActivitys = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="JOIN_TYPE_ENUM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration joinEnumeration = null;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="SPLIT_TYPE_ENUM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration splitEnumeration = null;
   private transient List<WorkEffort> workEfforts = null;
   private transient WorkflowActivityLoop workflowActivityLoop = null;
   private transient WorkflowActivitySubFlow workflowActivitySubFlow = null;
   private transient List<WorkflowActivityTool> workflowActivityTools = null;
   private transient WorkflowProcess defaultStartWorkflowProcess = null;
   private transient List<WorkflowTransition> fromWorkflowTransitions = null;
   private transient List<WorkflowTransition> toWorkflowTransitions = null;
   private transient List<WorkflowTransitionRef> workflowTransitionRefs = null;

  /**
   * Default constructor.
   */
  public WorkflowActivity() {
      super();
      this.baseEntityName = "WorkflowActivity";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("packageId");this.primaryKeyNames.add("packageVersion");this.primaryKeyNames.add("processId");this.primaryKeyNames.add("processVersion");this.primaryKeyNames.add("activityId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("packageId");this.allFieldsNames.add("packageVersion");this.allFieldsNames.add("processId");this.allFieldsNames.add("processVersion");this.allFieldsNames.add("activityId");this.allFieldsNames.add("objectName");this.allFieldsNames.add("objectPriority");this.allFieldsNames.add("description");this.allFieldsNames.add("timeLimit");this.allFieldsNames.add("startModeEnumId");this.allFieldsNames.add("finishModeEnumId");this.allFieldsNames.add("performerParticipantId");this.allFieldsNames.add("documentationUrl");this.allFieldsNames.add("iconUrl");this.allFieldsNames.add("cost");this.allFieldsNames.add("instantiationLimitEnumId");this.allFieldsNames.add("duration");this.allFieldsNames.add("workingTime");this.allFieldsNames.add("waitingTime");this.allFieldsNames.add("activityTypeEnumId");this.allFieldsNames.add("canStart");this.allFieldsNames.add("isInlineBlock");this.allFieldsNames.add("blockName");this.allFieldsNames.add("blockDocumentationUrl");this.allFieldsNames.add("blockIconUrl");this.allFieldsNames.add("blockDescription");this.allFieldsNames.add("blockBeginActivityId");this.allFieldsNames.add("blockEndActivityId");this.allFieldsNames.add("joinTypeEnumId");this.allFieldsNames.add("splitTypeEnumId");this.allFieldsNames.add("acceptAllAssignments");this.allFieldsNames.add("completeAllAssignments");this.allFieldsNames.add("limitService");this.allFieldsNames.add("limitAfterStart");this.allFieldsNames.add("delegateAfterStart");this.allFieldsNames.add("restartOnDelegate");this.allFieldsNames.add("inheritPriority");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkflowActivity(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param packageId the packageId to set
     */
    public void setPackageId(String packageId) {
        id.setPackageId(packageId);
    }
    /**
     * Auto generated value setter.
     * @param packageVersion the packageVersion to set
     */
    public void setPackageVersion(String packageVersion) {
        id.setPackageVersion(packageVersion);
    }
    /**
     * Auto generated value setter.
     * @param processId the processId to set
     */
    public void setProcessId(String processId) {
        id.setProcessId(processId);
    }
    /**
     * Auto generated value setter.
     * @param processVersion the processVersion to set
     */
    public void setProcessVersion(String processVersion) {
        id.setProcessVersion(processVersion);
    }
    /**
     * Auto generated value setter.
     * @param activityId the activityId to set
     */
    public void setActivityId(String activityId) {
        id.setActivityId(activityId);
    }
    /**
     * Auto generated value setter.
     * @param objectName the objectName to set
     */
    public void setObjectName(String objectName) {
        this.objectName = objectName;
    }
    /**
     * Auto generated value setter.
     * @param objectPriority the objectPriority to set
     */
    public void setObjectPriority(Long objectPriority) {
        this.objectPriority = objectPriority;
    }
    /**
     * Auto generated value setter.
     * @param description the description to set
     */
    public void setDescription(String description) {
        this.description = description;
    }
    /**
     * Auto generated value setter.
     * @param timeLimit the timeLimit to set
     */
    public void setTimeLimit(BigDecimal timeLimit) {
        this.timeLimit = timeLimit;
    }
    /**
     * Auto generated value setter.
     * @param startModeEnumId the startModeEnumId to set
     */
    public void setStartModeEnumId(String startModeEnumId) {
        this.startModeEnumId = startModeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param finishModeEnumId the finishModeEnumId to set
     */
    public void setFinishModeEnumId(String finishModeEnumId) {
        this.finishModeEnumId = finishModeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param performerParticipantId the performerParticipantId to set
     */
    public void setPerformerParticipantId(String performerParticipantId) {
        this.performerParticipantId = performerParticipantId;
    }
    /**
     * Auto generated value setter.
     * @param documentationUrl the documentationUrl to set
     */
    public void setDocumentationUrl(String documentationUrl) {
        this.documentationUrl = documentationUrl;
    }
    /**
     * Auto generated value setter.
     * @param iconUrl the iconUrl to set
     */
    public void setIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
    }
    /**
     * Auto generated value setter.
     * @param cost the cost to set
     */
    public void setCost(BigDecimal cost) {
        this.cost = cost;
    }
    /**
     * Auto generated value setter.
     * @param instantiationLimitEnumId the instantiationLimitEnumId to set
     */
    public void setInstantiationLimitEnumId(String instantiationLimitEnumId) {
        this.instantiationLimitEnumId = instantiationLimitEnumId;
    }
    /**
     * Auto generated value setter.
     * @param duration the duration to set
     */
    public void setDuration(BigDecimal duration) {
        this.duration = duration;
    }
    /**
     * Auto generated value setter.
     * @param workingTime the workingTime to set
     */
    public void setWorkingTime(BigDecimal workingTime) {
        this.workingTime = workingTime;
    }
    /**
     * Auto generated value setter.
     * @param waitingTime the waitingTime to set
     */
    public void setWaitingTime(BigDecimal waitingTime) {
        this.waitingTime = waitingTime;
    }
    /**
     * Auto generated value setter.
     * @param activityTypeEnumId the activityTypeEnumId to set
     */
    public void setActivityTypeEnumId(String activityTypeEnumId) {
        this.activityTypeEnumId = activityTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param canStart the canStart to set
     */
    public void setCanStart(String canStart) {
        this.canStart = canStart;
    }
    /**
     * Auto generated value setter.
     * @param isInlineBlock the isInlineBlock to set
     */
    public void setIsInlineBlock(String isInlineBlock) {
        this.isInlineBlock = isInlineBlock;
    }
    /**
     * Auto generated value setter.
     * @param blockName the blockName to set
     */
    public void setBlockName(String blockName) {
        this.blockName = blockName;
    }
    /**
     * Auto generated value setter.
     * @param blockDocumentationUrl the blockDocumentationUrl to set
     */
    public void setBlockDocumentationUrl(String blockDocumentationUrl) {
        this.blockDocumentationUrl = blockDocumentationUrl;
    }
    /**
     * Auto generated value setter.
     * @param blockIconUrl the blockIconUrl to set
     */
    public void setBlockIconUrl(String blockIconUrl) {
        this.blockIconUrl = blockIconUrl;
    }
    /**
     * Auto generated value setter.
     * @param blockDescription the blockDescription to set
     */
    public void setBlockDescription(String blockDescription) {
        this.blockDescription = blockDescription;
    }
    /**
     * Auto generated value setter.
     * @param blockBeginActivityId the blockBeginActivityId to set
     */
    public void setBlockBeginActivityId(String blockBeginActivityId) {
        this.blockBeginActivityId = blockBeginActivityId;
    }
    /**
     * Auto generated value setter.
     * @param blockEndActivityId the blockEndActivityId to set
     */
    public void setBlockEndActivityId(String blockEndActivityId) {
        this.blockEndActivityId = blockEndActivityId;
    }
    /**
     * Auto generated value setter.
     * @param joinTypeEnumId the joinTypeEnumId to set
     */
    public void setJoinTypeEnumId(String joinTypeEnumId) {
        this.joinTypeEnumId = joinTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param splitTypeEnumId the splitTypeEnumId to set
     */
    public void setSplitTypeEnumId(String splitTypeEnumId) {
        this.splitTypeEnumId = splitTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param acceptAllAssignments the acceptAllAssignments to set
     */
    public void setAcceptAllAssignments(String acceptAllAssignments) {
        this.acceptAllAssignments = acceptAllAssignments;
    }
    /**
     * Auto generated value setter.
     * @param completeAllAssignments the completeAllAssignments to set
     */
    public void setCompleteAllAssignments(String completeAllAssignments) {
        this.completeAllAssignments = completeAllAssignments;
    }
    /**
     * Auto generated value setter.
     * @param limitService the limitService to set
     */
    public void setLimitService(String limitService) {
        this.limitService = limitService;
    }
    /**
     * Auto generated value setter.
     * @param limitAfterStart the limitAfterStart to set
     */
    public void setLimitAfterStart(String limitAfterStart) {
        this.limitAfterStart = limitAfterStart;
    }
    /**
     * Auto generated value setter.
     * @param delegateAfterStart the delegateAfterStart to set
     */
    public void setDelegateAfterStart(String delegateAfterStart) {
        this.delegateAfterStart = delegateAfterStart;
    }
    /**
     * Auto generated value setter.
     * @param restartOnDelegate the restartOnDelegate to set
     */
    public void setRestartOnDelegate(String restartOnDelegate) {
        this.restartOnDelegate = restartOnDelegate;
    }
    /**
     * Auto generated value setter.
     * @param inheritPriority the inheritPriority to set
     */
    public void setInheritPriority(String inheritPriority) {
        this.inheritPriority = inheritPriority;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageId() {
        return this.id.getPackageId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPackageVersion() {
        return this.id.getPackageVersion();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessId() {
        return this.id.getProcessId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getProcessVersion() {
        return this.id.getProcessVersion();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getActivityId() {
        return this.id.getActivityId();
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getObjectName() {
        return this.objectName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getObjectPriority() {
        return this.objectPriority;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getTimeLimit() {
        return this.timeLimit;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getStartModeEnumId() {
        return this.startModeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getFinishModeEnumId() {
        return this.finishModeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getPerformerParticipantId() {
        return this.performerParticipantId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDocumentationUrl() {
        return this.documentationUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIconUrl() {
        return this.iconUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getCost() {
        return this.cost;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInstantiationLimitEnumId() {
        return this.instantiationLimitEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getDuration() {
        return this.duration;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWorkingTime() {
        return this.workingTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>BigDecimal</code>
     */
    public BigDecimal getWaitingTime() {
        return this.waitingTime;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getActivityTypeEnumId() {
        return this.activityTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCanStart() {
        return this.canStart;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getIsInlineBlock() {
        return this.isInlineBlock;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockName() {
        return this.blockName;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockDocumentationUrl() {
        return this.blockDocumentationUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockIconUrl() {
        return this.blockIconUrl;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockDescription() {
        return this.blockDescription;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockBeginActivityId() {
        return this.blockBeginActivityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getBlockEndActivityId() {
        return this.blockEndActivityId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getJoinTypeEnumId() {
        return this.joinTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSplitTypeEnumId() {
        return this.splitTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getAcceptAllAssignments() {
        return this.acceptAllAssignments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getCompleteAllAssignments() {
        return this.completeAllAssignments;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLimitService() {
        return this.limitService;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getLimitAfterStart() {
        return this.limitAfterStart;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDelegateAfterStart() {
        return this.delegateAfterStart;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getRestartOnDelegate() {
        return this.restartOnDelegate;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getInheritPriority() {
        return this.inheritPriority;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>StartModeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getStartModeEnumeration() throws RepositoryException {
        if (this.startModeEnumeration == null) {
            this.startModeEnumeration = getRelatedOne(Enumeration.class, "StartModeEnumeration");
        }
        return this.startModeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>FinishModeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getFinishModeEnumeration() throws RepositoryException {
        if (this.finishModeEnumeration == null) {
            this.finishModeEnumeration = getRelatedOne(Enumeration.class, "FinishModeEnumeration");
        }
        return this.finishModeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowParticipant</code> by the relation named <code>PerformerWorkflowParticipant</code>.
     * @return the <code>WorkflowParticipant</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowParticipant getPerformerWorkflowParticipant() throws RepositoryException {
        if (this.performerWorkflowParticipant == null) {
            this.performerWorkflowParticipant = getRelatedOne(WorkflowParticipant.class, "PerformerWorkflowParticipant");
        }
        return this.performerWorkflowParticipant;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>WorkflowProcess</code>.
     * @return the <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowProcess getWorkflowProcess() throws RepositoryException {
        if (this.workflowProcess == null) {
            this.workflowProcess = getRelatedOne(WorkflowProcess.class, "WorkflowProcess");
        }
        return this.workflowProcess;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivity</code> by the relation named <code>BlockBeginWorkflowActivity</code>.
     * @return the <code>WorkflowActivity</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowActivity getBlockBeginWorkflowActivity() throws RepositoryException {
        if (this.blockBeginWorkflowActivity == null) {
            this.blockBeginWorkflowActivity = getRelatedOne(WorkflowActivity.class, "BlockBeginWorkflowActivity");
        }
        return this.blockBeginWorkflowActivity;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivity</code> by the relation named <code>BlockEndWorkflowActivity</code>.
     * @return the <code>WorkflowActivity</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowActivity getBlockEndWorkflowActivity() throws RepositoryException {
        if (this.blockEndWorkflowActivity == null) {
            this.blockEndWorkflowActivity = getRelatedOne(WorkflowActivity.class, "BlockEndWorkflowActivity");
        }
        return this.blockEndWorkflowActivity;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivity</code> by the relation named <code>BlockBeginContainerWorkflowActivity</code>.
     * @return the list of <code>WorkflowActivity</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowActivity> getBlockBeginContainerWorkflowActivitys() throws RepositoryException {
        if (this.blockBeginContainerWorkflowActivitys == null) {
            this.blockBeginContainerWorkflowActivitys = getRelated(WorkflowActivity.class, "BlockBeginContainerWorkflowActivity");
        }
        return this.blockBeginContainerWorkflowActivitys;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivity</code> by the relation named <code>BlockEndContainerWorkflowActivity</code>.
     * @return the list of <code>WorkflowActivity</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowActivity> getBlockEndContainerWorkflowActivitys() throws RepositoryException {
        if (this.blockEndContainerWorkflowActivitys == null) {
            this.blockEndContainerWorkflowActivitys = getRelated(WorkflowActivity.class, "BlockEndContainerWorkflowActivity");
        }
        return this.blockEndContainerWorkflowActivitys;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>JoinEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getJoinEnumeration() throws RepositoryException {
        if (this.joinEnumeration == null) {
            this.joinEnumeration = getRelatedOne(Enumeration.class, "JoinEnumeration");
        }
        return this.joinEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>SplitEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getSplitEnumeration() throws RepositoryException {
        if (this.splitEnumeration == null) {
            this.splitEnumeration = getRelatedOne(Enumeration.class, "SplitEnumeration");
        }
        return this.splitEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>WorkEffort</code> by the relation named <code>WorkEffort</code>.
     * @return the list of <code>WorkEffort</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkEffort> getWorkEfforts() throws RepositoryException {
        if (this.workEfforts == null) {
            this.workEfforts = getRelated(WorkEffort.class, "WorkEffort");
        }
        return this.workEfforts;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivityLoop</code> by the relation named <code>WorkflowActivityLoop</code>.
     * @return the <code>WorkflowActivityLoop</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowActivityLoop getWorkflowActivityLoop() throws RepositoryException {
        if (this.workflowActivityLoop == null) {
            this.workflowActivityLoop = getRelatedOne(WorkflowActivityLoop.class, "WorkflowActivityLoop");
        }
        return this.workflowActivityLoop;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivitySubFlow</code> by the relation named <code>WorkflowActivitySubFlow</code>.
     * @return the <code>WorkflowActivitySubFlow</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowActivitySubFlow getWorkflowActivitySubFlow() throws RepositoryException {
        if (this.workflowActivitySubFlow == null) {
            this.workflowActivitySubFlow = getRelatedOne(WorkflowActivitySubFlow.class, "WorkflowActivitySubFlow");
        }
        return this.workflowActivitySubFlow;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowActivityTool</code> by the relation named <code>WorkflowActivityTool</code>.
     * @return the list of <code>WorkflowActivityTool</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowActivityTool> getWorkflowActivityTools() throws RepositoryException {
        if (this.workflowActivityTools == null) {
            this.workflowActivityTools = getRelated(WorkflowActivityTool.class, "WorkflowActivityTool");
        }
        return this.workflowActivityTools;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowProcess</code> by the relation named <code>DefaultStartWorkflowProcess</code>.
     * @return the <code>WorkflowProcess</code>
     * @throws RepositoryException if an error occurs
     */
    public WorkflowProcess getDefaultStartWorkflowProcess() throws RepositoryException {
        if (this.defaultStartWorkflowProcess == null) {
            this.defaultStartWorkflowProcess = getRelatedOne(WorkflowProcess.class, "DefaultStartWorkflowProcess");
        }
        return this.defaultStartWorkflowProcess;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowTransition</code> by the relation named <code>FromWorkflowTransition</code>.
     * @return the list of <code>WorkflowTransition</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowTransition> getFromWorkflowTransitions() throws RepositoryException {
        if (this.fromWorkflowTransitions == null) {
            this.fromWorkflowTransitions = getRelated(WorkflowTransition.class, "FromWorkflowTransition");
        }
        return this.fromWorkflowTransitions;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowTransition</code> by the relation named <code>ToWorkflowTransition</code>.
     * @return the list of <code>WorkflowTransition</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowTransition> getToWorkflowTransitions() throws RepositoryException {
        if (this.toWorkflowTransitions == null) {
            this.toWorkflowTransitions = getRelated(WorkflowTransition.class, "ToWorkflowTransition");
        }
        return this.toWorkflowTransitions;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowTransitionRef</code> by the relation named <code>WorkflowTransitionRef</code>.
     * @return the list of <code>WorkflowTransitionRef</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowTransitionRef> getWorkflowTransitionRefs() throws RepositoryException {
        if (this.workflowTransitionRefs == null) {
            this.workflowTransitionRefs = getRelated(WorkflowTransitionRef.class, "WorkflowTransitionRef");
        }
        return this.workflowTransitionRefs;
    }

    /**
     * Auto generated value setter.
     * @param startModeEnumeration the startModeEnumeration to set
    */
    public void setStartModeEnumeration(Enumeration startModeEnumeration) {
        this.startModeEnumeration = startModeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param finishModeEnumeration the finishModeEnumeration to set
    */
    public void setFinishModeEnumeration(Enumeration finishModeEnumeration) {
        this.finishModeEnumeration = finishModeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param performerWorkflowParticipant the performerWorkflowParticipant to set
    */
    public void setPerformerWorkflowParticipant(WorkflowParticipant performerWorkflowParticipant) {
        this.performerWorkflowParticipant = performerWorkflowParticipant;
    }
    /**
     * Auto generated value setter.
     * @param workflowProcess the workflowProcess to set
    */
    public void setWorkflowProcess(WorkflowProcess workflowProcess) {
        this.workflowProcess = workflowProcess;
    }
    /**
     * Auto generated value setter.
     * @param blockBeginWorkflowActivity the blockBeginWorkflowActivity to set
    */
    public void setBlockBeginWorkflowActivity(WorkflowActivity blockBeginWorkflowActivity) {
        this.blockBeginWorkflowActivity = blockBeginWorkflowActivity;
    }
    /**
     * Auto generated value setter.
     * @param blockEndWorkflowActivity the blockEndWorkflowActivity to set
    */
    public void setBlockEndWorkflowActivity(WorkflowActivity blockEndWorkflowActivity) {
        this.blockEndWorkflowActivity = blockEndWorkflowActivity;
    }
    /**
     * Auto generated value setter.
     * @param blockBeginContainerWorkflowActivitys the blockBeginContainerWorkflowActivitys to set
    */
    public void setBlockBeginContainerWorkflowActivitys(List<WorkflowActivity> blockBeginContainerWorkflowActivitys) {
        this.blockBeginContainerWorkflowActivitys = blockBeginContainerWorkflowActivitys;
    }
    /**
     * Auto generated value setter.
     * @param blockEndContainerWorkflowActivitys the blockEndContainerWorkflowActivitys to set
    */
    public void setBlockEndContainerWorkflowActivitys(List<WorkflowActivity> blockEndContainerWorkflowActivitys) {
        this.blockEndContainerWorkflowActivitys = blockEndContainerWorkflowActivitys;
    }
    /**
     * Auto generated value setter.
     * @param joinEnumeration the joinEnumeration to set
    */
    public void setJoinEnumeration(Enumeration joinEnumeration) {
        this.joinEnumeration = joinEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param splitEnumeration the splitEnumeration to set
    */
    public void setSplitEnumeration(Enumeration splitEnumeration) {
        this.splitEnumeration = splitEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param workEfforts the workEfforts to set
    */
    public void setWorkEfforts(List<WorkEffort> workEfforts) {
        this.workEfforts = workEfforts;
    }
    /**
     * Auto generated value setter.
     * @param workflowActivityLoop the workflowActivityLoop to set
    */
    public void setWorkflowActivityLoop(WorkflowActivityLoop workflowActivityLoop) {
        this.workflowActivityLoop = workflowActivityLoop;
    }
    /**
     * Auto generated value setter.
     * @param workflowActivitySubFlow the workflowActivitySubFlow to set
    */
    public void setWorkflowActivitySubFlow(WorkflowActivitySubFlow workflowActivitySubFlow) {
        this.workflowActivitySubFlow = workflowActivitySubFlow;
    }
    /**
     * Auto generated value setter.
     * @param workflowActivityTools the workflowActivityTools to set
    */
    public void setWorkflowActivityTools(List<WorkflowActivityTool> workflowActivityTools) {
        this.workflowActivityTools = workflowActivityTools;
    }
    /**
     * Auto generated value setter.
     * @param defaultStartWorkflowProcess the defaultStartWorkflowProcess to set
    */
    public void setDefaultStartWorkflowProcess(WorkflowProcess defaultStartWorkflowProcess) {
        this.defaultStartWorkflowProcess = defaultStartWorkflowProcess;
    }
    /**
     * Auto generated value setter.
     * @param fromWorkflowTransitions the fromWorkflowTransitions to set
    */
    public void setFromWorkflowTransitions(List<WorkflowTransition> fromWorkflowTransitions) {
        this.fromWorkflowTransitions = fromWorkflowTransitions;
    }
    /**
     * Auto generated value setter.
     * @param toWorkflowTransitions the toWorkflowTransitions to set
    */
    public void setToWorkflowTransitions(List<WorkflowTransition> toWorkflowTransitions) {
        this.toWorkflowTransitions = toWorkflowTransitions;
    }
    /**
     * Auto generated value setter.
     * @param workflowTransitionRefs the workflowTransitionRefs to set
    */
    public void setWorkflowTransitionRefs(List<WorkflowTransitionRef> workflowTransitionRefs) {
        this.workflowTransitionRefs = workflowTransitionRefs;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setPackageId((String) mapValue.get("packageId"));
        setPackageVersion((String) mapValue.get("packageVersion"));
        setProcessId((String) mapValue.get("processId"));
        setProcessVersion((String) mapValue.get("processVersion"));
        setActivityId((String) mapValue.get("activityId"));
        setObjectName((String) mapValue.get("objectName"));
        setObjectPriority((Long) mapValue.get("objectPriority"));
        setDescription((String) mapValue.get("description"));
        setTimeLimit(convertToBigDecimal(mapValue.get("timeLimit")));
        setStartModeEnumId((String) mapValue.get("startModeEnumId"));
        setFinishModeEnumId((String) mapValue.get("finishModeEnumId"));
        setPerformerParticipantId((String) mapValue.get("performerParticipantId"));
        setDocumentationUrl((String) mapValue.get("documentationUrl"));
        setIconUrl((String) mapValue.get("iconUrl"));
        setCost(convertToBigDecimal(mapValue.get("cost")));
        setInstantiationLimitEnumId((String) mapValue.get("instantiationLimitEnumId"));
        setDuration(convertToBigDecimal(mapValue.get("duration")));
        setWorkingTime(convertToBigDecimal(mapValue.get("workingTime")));
        setWaitingTime(convertToBigDecimal(mapValue.get("waitingTime")));
        setActivityTypeEnumId((String) mapValue.get("activityTypeEnumId"));
        setCanStart((String) mapValue.get("canStart"));
        setIsInlineBlock((String) mapValue.get("isInlineBlock"));
        setBlockName((String) mapValue.get("blockName"));
        setBlockDocumentationUrl((String) mapValue.get("blockDocumentationUrl"));
        setBlockIconUrl((String) mapValue.get("blockIconUrl"));
        setBlockDescription((String) mapValue.get("blockDescription"));
        setBlockBeginActivityId((String) mapValue.get("blockBeginActivityId"));
        setBlockEndActivityId((String) mapValue.get("blockEndActivityId"));
        setJoinTypeEnumId((String) mapValue.get("joinTypeEnumId"));
        setSplitTypeEnumId((String) mapValue.get("splitTypeEnumId"));
        setAcceptAllAssignments((String) mapValue.get("acceptAllAssignments"));
        setCompleteAllAssignments((String) mapValue.get("completeAllAssignments"));
        setLimitService((String) mapValue.get("limitService"));
        setLimitAfterStart((String) mapValue.get("limitAfterStart"));
        setDelegateAfterStart((String) mapValue.get("delegateAfterStart"));
        setRestartOnDelegate((String) mapValue.get("restartOnDelegate"));
        setInheritPriority((String) mapValue.get("inheritPriority"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("packageId", getPackageId());
        mapValue.put("packageVersion", getPackageVersion());
        mapValue.put("processId", getProcessId());
        mapValue.put("processVersion", getProcessVersion());
        mapValue.put("activityId", getActivityId());
        mapValue.put("objectName", getObjectName());
        mapValue.put("objectPriority", getObjectPriority());
        mapValue.put("description", getDescription());
        mapValue.put("timeLimit", getTimeLimit());
        mapValue.put("startModeEnumId", getStartModeEnumId());
        mapValue.put("finishModeEnumId", getFinishModeEnumId());
        mapValue.put("performerParticipantId", getPerformerParticipantId());
        mapValue.put("documentationUrl", getDocumentationUrl());
        mapValue.put("iconUrl", getIconUrl());
        mapValue.put("cost", getCost());
        mapValue.put("instantiationLimitEnumId", getInstantiationLimitEnumId());
        mapValue.put("duration", getDuration());
        mapValue.put("workingTime", getWorkingTime());
        mapValue.put("waitingTime", getWaitingTime());
        mapValue.put("activityTypeEnumId", getActivityTypeEnumId());
        mapValue.put("canStart", getCanStart());
        mapValue.put("isInlineBlock", getIsInlineBlock());
        mapValue.put("blockName", getBlockName());
        mapValue.put("blockDocumentationUrl", getBlockDocumentationUrl());
        mapValue.put("blockIconUrl", getBlockIconUrl());
        mapValue.put("blockDescription", getBlockDescription());
        mapValue.put("blockBeginActivityId", getBlockBeginActivityId());
        mapValue.put("blockEndActivityId", getBlockEndActivityId());
        mapValue.put("joinTypeEnumId", getJoinTypeEnumId());
        mapValue.put("splitTypeEnumId", getSplitTypeEnumId());
        mapValue.put("acceptAllAssignments", getAcceptAllAssignments());
        mapValue.put("completeAllAssignments", getCompleteAllAssignments());
        mapValue.put("limitService", getLimitService());
        mapValue.put("limitAfterStart", getLimitAfterStart());
        mapValue.put("delegateAfterStart", getDelegateAfterStart());
        mapValue.put("restartOnDelegate", getRestartOnDelegate());
        mapValue.put("inheritPriority", getInheritPriority());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
