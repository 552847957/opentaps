package org.opentaps.domain.base.entities;

/*
* Copyright (c) 2008 - 2009 Open Source Strategies, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the Honest Public License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* Honest Public License for more details.
*
* You should have received a copy of the Honest Public License
* along with this program; if not, write to Funambol,
* 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
*/

// DO NOT EDIT THIS FILE!  THIS IS AUTO GENERATED AND WILL GET WRITTEN OVER PERIODICALLY WHEN THE DATA MODEL CHANGES
// EXTEND THIS CLASS INSTEAD.

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;

import javolution.util.FastMap;

import org.opentaps.foundation.entity.Entity;
import org.opentaps.foundation.entity.EntityFieldInterface;
import org.opentaps.foundation.repository.RepositoryException;
import org.opentaps.foundation.repository.RepositoryInterface;
import javax.persistence.*;
import org.hibernate.search.annotations.*;
import java.lang.Long;
import java.lang.String;
import java.sql.Timestamp;

/**
 * Auto generated base entity WorkflowComplexTypeInfo.
 */
@javax.persistence.Entity
@Table(name="WORKFLOW_COMPLEX_TYPE_INFO")
public class WorkflowComplexTypeInfo extends Entity {
static {
java.util.Map<String, String> fields = new java.util.HashMap<String, String>();
        fields.put("complexTypeInfoId", "COMPLEX_TYPE_INFO_ID");
        fields.put("memberParentInfoId", "MEMBER_PARENT_INFO_ID");
        fields.put("dataTypeEnumId", "DATA_TYPE_ENUM_ID");
        fields.put("subTypeEnumId", "SUB_TYPE_ENUM_ID");
        fields.put("arrayLowerIndex", "ARRAY_LOWER_INDEX");
        fields.put("arrayUpperIndex", "ARRAY_UPPER_INDEX");
        fields.put("lastUpdatedStamp", "LAST_UPDATED_STAMP");
        fields.put("lastUpdatedTxStamp", "LAST_UPDATED_TX_STAMP");
        fields.put("createdStamp", "CREATED_STAMP");
        fields.put("createdTxStamp", "CREATED_TX_STAMP");
fieldMapColumns.put("WorkflowComplexTypeInfo", fields);
}
  public static enum Fields implements EntityFieldInterface<WorkflowComplexTypeInfo> {
    complexTypeInfoId("complexTypeInfoId"),
    memberParentInfoId("memberParentInfoId"),
    dataTypeEnumId("dataTypeEnumId"),
    subTypeEnumId("subTypeEnumId"),
    arrayLowerIndex("arrayLowerIndex"),
    arrayUpperIndex("arrayUpperIndex"),
    lastUpdatedStamp("lastUpdatedStamp"),
    lastUpdatedTxStamp("lastUpdatedTxStamp"),
    createdStamp("createdStamp"),
    createdTxStamp("createdTxStamp");
    private final String fieldName;
    private Fields(String name) { fieldName = name; }
    /** {@inheritDoc} */
    public String getName() { return fieldName; }
    /** {@inheritDoc} */
    public String asc() { return fieldName + " ASC"; }
    /** {@inheritDoc} */
    public String desc() { return fieldName + " DESC"; }
  }

   @org.hibernate.annotations.GenericGenerator(name="WorkflowComplexTypeInfo_GEN",  strategy="org.opentaps.foundation.entity.hibernate.OpentapsIdentifierGenerator")
   @GeneratedValue(generator="WorkflowComplexTypeInfo_GEN")
   @Id
   @Column(name="COMPLEX_TYPE_INFO_ID")
   private String complexTypeInfoId;
   @Column(name="MEMBER_PARENT_INFO_ID")
   private String memberParentInfoId;
   @Column(name="DATA_TYPE_ENUM_ID")
   private String dataTypeEnumId;
   @Column(name="SUB_TYPE_ENUM_ID")
   private String subTypeEnumId;
   @Column(name="ARRAY_LOWER_INDEX")
   private Long arrayLowerIndex;
   @Column(name="ARRAY_UPPER_INDEX")
   private Long arrayUpperIndex;
   @Column(name="LAST_UPDATED_STAMP")
   private Timestamp lastUpdatedStamp;
   @Column(name="LAST_UPDATED_TX_STAMP")
   private Timestamp lastUpdatedTxStamp;
   @Column(name="CREATED_STAMP")
   private Timestamp createdStamp;
   @Column(name="CREATED_TX_STAMP")
   private Timestamp createdTxStamp;
   @ManyToOne(cascade = {CascadeType.PERSIST, CascadeType.MERGE}, fetch=FetchType.LAZY)
   @JoinColumn(name="DATA_TYPE_ENUM_ID", insertable=false, updatable=false)
   @org.hibernate.annotations.Generated(
      org.hibernate.annotations.GenerationTime.ALWAYS
   )
   
   private Enumeration dataTypeEnumeration = null;
   @OneToMany(fetch=FetchType.LAZY)
   @JoinColumn(name="COMPLEX_TYPE_INFO_ID")
   
   private List<WorkflowDataField> workflowDataFields = null;
   @OneToMany(fetch=FetchType.LAZY)
   @JoinColumn(name="COMPLEX_TYPE_INFO_ID")
   
   private List<WorkflowFormalParam> workflowFormalParams = null;
   @OneToMany(fetch=FetchType.LAZY)
   @JoinColumn(name="COMPLEX_TYPE_INFO_ID")
   
   private List<WorkflowTypeDeclaration> workflowTypeDeclarations = null;

  /**
   * Default constructor.
   */
  public WorkflowComplexTypeInfo() {
      super();
      this.baseEntityName = "WorkflowComplexTypeInfo";
      this.isView = false;
      
      this.primaryKeyNames = new ArrayList<String>();
      this.primaryKeyNames.add("complexTypeInfoId");
      this.allFieldsNames = new ArrayList<String>();
      this.allFieldsNames.add("complexTypeInfoId");this.allFieldsNames.add("memberParentInfoId");this.allFieldsNames.add("dataTypeEnumId");this.allFieldsNames.add("subTypeEnumId");this.allFieldsNames.add("arrayLowerIndex");this.allFieldsNames.add("arrayUpperIndex");this.allFieldsNames.add("lastUpdatedStamp");this.allFieldsNames.add("lastUpdatedTxStamp");this.allFieldsNames.add("createdStamp");this.allFieldsNames.add("createdTxStamp");
      this.nonPrimaryKeyNames = new ArrayList<String>();
      this.nonPrimaryKeyNames.addAll(allFieldsNames);
      this.nonPrimaryKeyNames.removeAll(primaryKeyNames);
  }

  /**
   * Constructor with a repository.
   * @param repository a <code>RepositoryInterface</code> value
   */
  public WorkflowComplexTypeInfo(RepositoryInterface repository) {
      this();
      initRepository(repository);
  }

    /**
     * Auto generated value setter.
     * @param complexTypeInfoId the complexTypeInfoId to set
     */
    public void setComplexTypeInfoId(String complexTypeInfoId) {
        this.complexTypeInfoId = complexTypeInfoId;
    }
    /**
     * Auto generated value setter.
     * @param memberParentInfoId the memberParentInfoId to set
     */
    public void setMemberParentInfoId(String memberParentInfoId) {
        this.memberParentInfoId = memberParentInfoId;
    }
    /**
     * Auto generated value setter.
     * @param dataTypeEnumId the dataTypeEnumId to set
     */
    public void setDataTypeEnumId(String dataTypeEnumId) {
        this.dataTypeEnumId = dataTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param subTypeEnumId the subTypeEnumId to set
     */
    public void setSubTypeEnumId(String subTypeEnumId) {
        this.subTypeEnumId = subTypeEnumId;
    }
    /**
     * Auto generated value setter.
     * @param arrayLowerIndex the arrayLowerIndex to set
     */
    public void setArrayLowerIndex(Long arrayLowerIndex) {
        this.arrayLowerIndex = arrayLowerIndex;
    }
    /**
     * Auto generated value setter.
     * @param arrayUpperIndex the arrayUpperIndex to set
     */
    public void setArrayUpperIndex(Long arrayUpperIndex) {
        this.arrayUpperIndex = arrayUpperIndex;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedStamp the lastUpdatedStamp to set
     */
    public void setLastUpdatedStamp(Timestamp lastUpdatedStamp) {
        this.lastUpdatedStamp = lastUpdatedStamp;
    }
    /**
     * Auto generated value setter.
     * @param lastUpdatedTxStamp the lastUpdatedTxStamp to set
     */
    public void setLastUpdatedTxStamp(Timestamp lastUpdatedTxStamp) {
        this.lastUpdatedTxStamp = lastUpdatedTxStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdStamp the createdStamp to set
     */
    public void setCreatedStamp(Timestamp createdStamp) {
        this.createdStamp = createdStamp;
    }
    /**
     * Auto generated value setter.
     * @param createdTxStamp the createdTxStamp to set
     */
    public void setCreatedTxStamp(Timestamp createdTxStamp) {
        this.createdTxStamp = createdTxStamp;
    }

    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getComplexTypeInfoId() {
        return this.complexTypeInfoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getMemberParentInfoId() {
        return this.memberParentInfoId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getDataTypeEnumId() {
        return this.dataTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>String</code>
     */
    public String getSubTypeEnumId() {
        return this.subTypeEnumId;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getArrayLowerIndex() {
        return this.arrayLowerIndex;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Long</code>
     */
    public Long getArrayUpperIndex() {
        return this.arrayUpperIndex;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedStamp() {
        return this.lastUpdatedStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getLastUpdatedTxStamp() {
        return this.lastUpdatedTxStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedStamp() {
        return this.createdStamp;
    }
    /**
     * Auto generated value accessor.
     * @return <code>Timestamp</code>
     */
    public Timestamp getCreatedTxStamp() {
        return this.createdTxStamp;
    }

    /**
     * Auto generated method that gets the related <code>Enumeration</code> by the relation named <code>DataTypeEnumeration</code>.
     * @return the <code>Enumeration</code>
     * @throws RepositoryException if an error occurs
     */
    public Enumeration getDataTypeEnumeration() throws RepositoryException {
        if (this.dataTypeEnumeration == null) {
            this.dataTypeEnumeration = getRelatedOne(Enumeration.class, "DataTypeEnumeration");
        }
        return this.dataTypeEnumeration;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowDataField</code> by the relation named <code>WorkflowDataField</code>.
     * @return the list of <code>WorkflowDataField</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowDataField> getWorkflowDataFields() throws RepositoryException {
        if (this.workflowDataFields == null) {
            this.workflowDataFields = getRelated(WorkflowDataField.class, "WorkflowDataField");
        }
        return this.workflowDataFields;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowFormalParam</code> by the relation named <code>WorkflowFormalParam</code>.
     * @return the list of <code>WorkflowFormalParam</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowFormalParam> getWorkflowFormalParams() throws RepositoryException {
        if (this.workflowFormalParams == null) {
            this.workflowFormalParams = getRelated(WorkflowFormalParam.class, "WorkflowFormalParam");
        }
        return this.workflowFormalParams;
    }
    /**
     * Auto generated method that gets the related <code>WorkflowTypeDeclaration</code> by the relation named <code>WorkflowTypeDeclaration</code>.
     * @return the list of <code>WorkflowTypeDeclaration</code>
     * @throws RepositoryException if an error occurs
     */
    public List<? extends WorkflowTypeDeclaration> getWorkflowTypeDeclarations() throws RepositoryException {
        if (this.workflowTypeDeclarations == null) {
            this.workflowTypeDeclarations = getRelated(WorkflowTypeDeclaration.class, "WorkflowTypeDeclaration");
        }
        return this.workflowTypeDeclarations;
    }

    /**
     * Auto generated value setter.
     * @param dataTypeEnumeration the dataTypeEnumeration to set
    */
    public void setDataTypeEnumeration(Enumeration dataTypeEnumeration) {
        this.dataTypeEnumeration = dataTypeEnumeration;
    }
    /**
     * Auto generated value setter.
     * @param workflowDataFields the workflowDataFields to set
    */
    public void setWorkflowDataFields(List<WorkflowDataField> workflowDataFields) {
        this.workflowDataFields = workflowDataFields;
    }
    /**
     * Auto generated value setter.
     * @param workflowFormalParams the workflowFormalParams to set
    */
    public void setWorkflowFormalParams(List<WorkflowFormalParam> workflowFormalParams) {
        this.workflowFormalParams = workflowFormalParams;
    }
    /**
     * Auto generated value setter.
     * @param workflowTypeDeclarations the workflowTypeDeclarations to set
    */
    public void setWorkflowTypeDeclarations(List<WorkflowTypeDeclaration> workflowTypeDeclarations) {
        this.workflowTypeDeclarations = workflowTypeDeclarations;
    }


    /** {@inheritDoc} */
    @Override
    public void fromMap(Map<String, Object> mapValue) {
        preInit();
        setComplexTypeInfoId((String) mapValue.get("complexTypeInfoId"));
        setMemberParentInfoId((String) mapValue.get("memberParentInfoId"));
        setDataTypeEnumId((String) mapValue.get("dataTypeEnumId"));
        setSubTypeEnumId((String) mapValue.get("subTypeEnumId"));
        setArrayLowerIndex((Long) mapValue.get("arrayLowerIndex"));
        setArrayUpperIndex((Long) mapValue.get("arrayUpperIndex"));
        setLastUpdatedStamp((Timestamp) mapValue.get("lastUpdatedStamp"));
        setLastUpdatedTxStamp((Timestamp) mapValue.get("lastUpdatedTxStamp"));
        setCreatedStamp((Timestamp) mapValue.get("createdStamp"));
        setCreatedTxStamp((Timestamp) mapValue.get("createdTxStamp"));
        postInit();
    }

    /** {@inheritDoc} */
    @Override
    public Map<String, Object> toMap() {
        Map<String, Object> mapValue = new FastMap<String, Object>();
        mapValue.put("complexTypeInfoId", getComplexTypeInfoId());
        mapValue.put("memberParentInfoId", getMemberParentInfoId());
        mapValue.put("dataTypeEnumId", getDataTypeEnumId());
        mapValue.put("subTypeEnumId", getSubTypeEnumId());
        mapValue.put("arrayLowerIndex", getArrayLowerIndex());
        mapValue.put("arrayUpperIndex", getArrayUpperIndex());
        mapValue.put("lastUpdatedStamp", getLastUpdatedStamp());
        mapValue.put("lastUpdatedTxStamp", getLastUpdatedTxStamp());
        mapValue.put("createdStamp", getCreatedStamp());
        mapValue.put("createdTxStamp", getCreatedTxStamp());
        return mapValue;
    }


}
