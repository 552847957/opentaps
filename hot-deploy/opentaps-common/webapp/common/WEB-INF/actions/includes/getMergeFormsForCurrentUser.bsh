/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 * 
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */
/* Copyright (c) 2005-2006 Open Source Strategies, Inc. */

import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;

userLogin = request.getAttribute("userLogin");

mergeFormLookupEntity = context.get("mergeFormLookupEntity");
if (UtilValidate.isEmpty(mergeFormLookupEntity)) mergeFormLookupEntity = "MergeForm";

// Retrieve available templates
cond = UtilMisc.toList(new EntityExpr("partyId", EntityOperator.EQUALS, userLogin.getString("partyId")), new EntityExpr("partyId", EntityOperator.EQUALS, null));
templates = delegator.findByCondition(mergeFormLookupEntity, new EntityConditionList(cond, EntityOperator.OR), null, UtilMisc.toList("mergeFormName"));
context.put("templates", templates);