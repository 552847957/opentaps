/* 
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 *
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

import java.util.ArrayList;

import org.ofbiz.base.util.*;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;
import org.opentaps.common.util.UtilMessage;
import org.opentaps.common.util.UtilCommon;
import com.opensourcestrategies.crmsfa.security.CrmsfaSecurity;
import java.sql.Timestamp;

security = request.getAttribute("security");
userLogin = request.getAttribute("userLogin");

if (!(hasPaymentUpdatePermission = CrmsfaSecurity.hasPartyRelationSecurity(security, "CRMSFA_PAY", "_UPDATE", userLogin, partyId))) {
    context.put("allowed", false);
    return;
}
context.put("hasPaymentUpdatePermission", hasPaymentUpdatePermission);

partyId = parameters.get("partyId");
taxAuthGeoId = parameters.get("taxAuthGeoId");
taxAuthPartyId = parameters.get("taxAuthPartyId");
fromDate = parameters.get("fromDate");
if ((partyId != null) && (taxAuthGeoId != null) && (taxAuthPartyId != null) && (fromDate != null)) {
    taxAuthPartyInfo = delegator.findByPrimaryKey("PartyTaxAuthInfoAndDetail", UtilMisc.toMap("partyId", partyId, "geoId", taxAuthGeoId, "taxAuthGeoId", taxAuthGeoId, "taxAuthPartyId", taxAuthPartyId, "fromDate", Timestamp.valueOf(fromDate)));
    context.put("taxAuthPartyInfo", taxAuthPartyInfo);
}

// available tax authorities
taxAuthorities = delegator.findAllCache("TaxAuthorityAndDetail", UtilMisc.toList("abbreviation", "groupName"));
context.put("taxAuthorities", taxAuthorities);
