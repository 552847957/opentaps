/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 *
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

import org.ofbiz.base.util.UtilMisc;
import org.opentaps.common.security.OpentapsSecurity;

if (security == null || security == null) return;
crmsfaSecurity = new OpentapsSecurity(security, userLogin);

partyId = parameters.get("partyId");
agreementId = parameters.get("agreementId");
if (agreementId != null) {
    agreement = delegator.findByPrimaryKey("Agreement", UtilMisc.toMap("agreementId", agreementId));
    partyId = agreement.get("partyIdFrom");
}

hasViewAgreementPermission  = false;
hasUpdateAgreementPermission = false;
hasCreateAgreementPermission = false;

hasViewAgreementPermission = crmsfaSecurity.hasPartyRelationSecurity("CRMSFA_PARTNER", "_VIEW", partyId);
hasUpdateAgreementPermission = crmsfaSecurity.hasPartyRelationSecurity("CRMSFA_PARTNER", "_UPDATE", partyId);
hasCreateAgreementPermission = hasUpdateAgreementPermission;

context.put("hasViewAgreementPermission", hasViewAgreementPermission);
context.put("hasUpdateAgreementPermission", hasUpdateAgreementPermission);
context.put("hasCreateAgreementPermission", hasCreateAgreementPermission);