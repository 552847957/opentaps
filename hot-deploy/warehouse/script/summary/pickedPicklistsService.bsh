/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 *
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

// @author Fabien Carrion

import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.base.util.UtilValidate;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;

if ( !context.containsKey("facilityId") ) return;

// bshService.bsh
delegator = dctx.getDelegator();

// Picked Picklists
conditions = new ArrayList();
conditions.add( new EntityExpr("pFacilityId", EntityOperator.EQUALS, context.get("facilityId")) );
conditions.add( new EntityExpr("pStatusId", EntityOperator.EQUALS, "PICKLIST_PICKED") );
conditions.add( new EntityExpr("piItemStatusId", EntityOperator.EQUALS, "PICKITEM_PENDING") );
conditions.add(new EntityConditionList(UtilMisc.toList(new EntityExpr("oisgStatusId", EntityOperator.NOT_EQUAL, "OISG_PACKED"), new EntityExpr("oisgStatusId", EntityOperator.EQUALS, null)), EntityOperator.OR));
picklistItems = delegator.findByCondition("PicklistItemAndOdrItmShipGrp", new EntityConditionList(conditions, EntityOperator.AND), null, UtilMisc.toList("piOrderId", "piShipGroupSeqId", "oiProductId"));
picklistIds = EntityUtil.getFieldListFromEntityList(picklistItems, "pPicklistId", true);
context.put("pickedPicklistIds", picklistIds);
