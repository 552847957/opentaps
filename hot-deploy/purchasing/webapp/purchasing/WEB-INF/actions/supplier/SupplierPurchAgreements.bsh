/*
 * Copyright (c) 2006 - 2007 Open Source Strategies, Inc.
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 * 
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */
import javolution.util.FastList;
 
import org.ofbiz.base.util.UtilMisc;
import org.ofbiz.entity.condition.*;
import org.ofbiz.entity.util.EntityUtil;

import org.opentaps.common.util.UtilCommon;
import org.opentaps.common.agreement.UtilAgreement;

import com.opensourcestrategies.crmsfa.party.PartyHelper;
 
organizationPartyId = UtilCommon.getOrganizationPartyId(request);
if (organizationPartyId == null) {
    return;
}

supplierPartyId = parameters.get("partyId");

/*
 * Check partyId if it has the role SUPPLIER
 */
validRoleTypeId = PartyHelper.getFirstValidRoleTypeId(supplierPartyId, UtilMisc.toList("SUPPLIER"), delegator);
if ((validRoleTypeId == null) || (!validRoleTypeId.equals("SUPPLIER")))  {
    return;
}

/*
 * Get list of agreements between organization and current supplier 
 */
searchConditions = FastList.newInstance(); 
searchConditions.add(new EntityExpr("partyIdFrom", EntityOperator.EQUALS, organizationPartyId));
searchConditions.add(new EntityExpr("partyIdTo", EntityOperator.EQUALS, supplierPartyId));
searchConditions.add(EntityUtil.getFilterByDateExpr());
conditions = new EntityConditionList(searchConditions, EntityOperator.AND);

orderBy = UtilMisc.toList("fromDate");

context.put("agreementsPaginatorName", "supplierAgreements");
context.put("agreementsListBuilder", UtilAgreement.getAgreementsListBuilder(conditions, orderBy, locale));
