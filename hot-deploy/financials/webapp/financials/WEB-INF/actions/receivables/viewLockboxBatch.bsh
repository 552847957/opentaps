/*
 * Copyright (c) 2007 Open Source Strategies, Inc.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Honest Public License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Honest Public License for more details.
 *
 * You should have received a copy of the Honest Public License
 * along with this program; if not, write to Funambol,
 * 643 Bair Island Road, Suite 305 - Redwood City, CA 94063, USA
 */

import org.ofbiz.base.util.*;
import org.opentaps.common.util.UtilCommon;
import org.opentaps.common.util.UtilMessage;
import org.opentaps.domain.DomainsLoader;
import org.opentaps.foundation.exception.FoundationException;
import org.opentaps.foundation.repository.ofbiz.Repository;
import org.opentaps.foundation.infrastructure.Infrastructure;
import org.opentaps.foundation.infrastructure.User;

domain = new DomainsLoader(new Infrastructure(dispatcher), new User(userLogin)).loadDomainsDirectory().getBillingDomain();
repository = domain.getLockboxRepository();

lockboxBatchId = parameters.get("lockboxBatchId");
if (UtilValidate.isNotEmpty(lockboxBatchId)) {
    try {
        batch = repository.getBatchById(lockboxBatchId);
    } catch (FoundationException e) {
        return;
    }
}

organizationPartyId = session.getAttribute("organizationPartyId");

context.put("organizationPartyId", organizationPartyId);
context.put("batch", batch);

// put to history
context{"history"} = UtilCommon.makeHistoryEntry(UtilMessage.expandLabel("FinancialsNavHistoryLockboxBatch", locale, UtilMisc.toMap("lockboxBatchId", batch.batchId)), "viewLockboxBatch", UtilMisc.toList("lockboxBatchId"));

